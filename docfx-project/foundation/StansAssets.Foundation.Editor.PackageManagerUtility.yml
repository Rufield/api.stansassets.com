### YamlMime:ManagedReference
items:
- uid: StansAssets.Foundation.Editor.PackageManagerUtility
  commentId: T:StansAssets.Foundation.Editor.PackageManagerUtility
  id: PackageManagerUtility
  parent: StansAssets.Foundation.Editor
  children:
  - StansAssets.Foundation.Editor.PackageManagerUtility.GetAllProjectPackages
  - StansAssets.Foundation.Editor.PackageManagerUtility.GetPackageInfo(System.String)
  - StansAssets.Foundation.Editor.PackageManagerUtility.GetPackageRootPath(System.String)
  langs:
  - csharp
  - vb
  name: PackageManagerUtility
  nameWithType: PackageManagerUtility
  fullName: StansAssets.Foundation.Editor.PackageManagerUtility
  type: Class
  source:
    id: PackageManagerUtility
    path: ''
    startLine: 1396
  assemblies:
  - cs.temp.dll
  namespace: StansAssets.Foundation.Editor
  summary: "\nPackage Manager Utility methods.\n"
  example: []
  syntax:
    content: public static class PackageManagerUtility
    content.vb: Public Module PackageManagerUtility
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: StansAssets.Foundation.Editor.PackageManagerUtility.GetPackageInfo(System.String)
  commentId: M:StansAssets.Foundation.Editor.PackageManagerUtility.GetPackageInfo(System.String)
  id: GetPackageInfo(System.String)
  parent: StansAssets.Foundation.Editor.PackageManagerUtility
  langs:
  - csharp
  - vb
  name: GetPackageInfo(String)
  nameWithType: PackageManagerUtility.GetPackageInfo(String)
  fullName: StansAssets.Foundation.Editor.PackageManagerUtility.GetPackageInfo(System.String)
  type: Method
  source:
    id: GetPackageInfo
    path: ''
    startLine: 1403
  assemblies:
  - cs.temp.dll
  namespace: StansAssets.Foundation.Editor
  summary: "\nReturns PackageInfo if package is installed in the project, <code>null</code> otherwise.\n"
  example: []
  syntax:
    content: public static PackageInfo GetPackageInfo(string packageName)
    parameters:
    - id: packageName
      type: System.String
      description: Package name.
    return:
      type: PackageInfo
      description: Returns PackageInfo if package is installed in the project, <code>null</code> otherwise.
    content.vb: Public Shared Function GetPackageInfo(packageName As String) As PackageInfo
  overload: StansAssets.Foundation.Editor.PackageManagerUtility.GetPackageInfo*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: StansAssets.Foundation.Editor.PackageManagerUtility.GetAllProjectPackages
  commentId: M:StansAssets.Foundation.Editor.PackageManagerUtility.GetAllProjectPackages
  id: GetAllProjectPackages
  parent: StansAssets.Foundation.Editor.PackageManagerUtility
  langs:
  - csharp
  - vb
  name: GetAllProjectPackages()
  nameWithType: PackageManagerUtility.GetAllProjectPackages()
  fullName: StansAssets.Foundation.Editor.PackageManagerUtility.GetAllProjectPackages()
  type: Method
  source:
    id: GetAllProjectPackages
    path: ''
    startLine: 1412
  assemblies:
  - cs.temp.dll
  namespace: StansAssets.Foundation.Editor
  summary: "\nSync method to return all the packages installed in the project.\n"
  example: []
  syntax:
    content: public static List<PackageInfo> GetAllProjectPackages()
    return:
      type: List{PackageInfo}
      description: Returns all the packages installed in the project.
    content.vb: Public Shared Function GetAllProjectPackages As List(Of PackageInfo)
  overload: StansAssets.Foundation.Editor.PackageManagerUtility.GetAllProjectPackages*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: StansAssets.Foundation.Editor.PackageManagerUtility.GetPackageRootPath(System.String)
  commentId: M:StansAssets.Foundation.Editor.PackageManagerUtility.GetPackageRootPath(System.String)
  id: GetPackageRootPath(System.String)
  parent: StansAssets.Foundation.Editor.PackageManagerUtility
  langs:
  - csharp
  - vb
  name: GetPackageRootPath(String)
  nameWithType: PackageManagerUtility.GetPackageRootPath(String)
  fullName: StansAssets.Foundation.Editor.PackageManagerUtility.GetPackageRootPath(System.String)
  type: Method
  source:
    id: GetPackageRootPath
    path: ''
    startLine: 1425
  assemblies:
  - cs.temp.dll
  namespace: StansAssets.Foundation.Editor
  summary: "\nReturns package root path based on package name.\n"
  example: []
  syntax:
    content: public static string GetPackageRootPath(string packageName)
    parameters:
    - id: packageName
      type: System.String
      description: Package name.
    return:
      type: System.String
      description: Package root path.
    content.vb: Public Shared Function GetPackageRootPath(packageName As String) As String
  overload: StansAssets.Foundation.Editor.PackageManagerUtility.GetPackageRootPath*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: StansAssets.Foundation.Editor
  commentId: N:StansAssets.Foundation.Editor
  name: StansAssets.Foundation.Editor
  nameWithType: StansAssets.Foundation.Editor
  fullName: StansAssets.Foundation.Editor
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: StansAssets.Foundation.Editor.PackageManagerUtility.GetPackageInfo*
  commentId: Overload:StansAssets.Foundation.Editor.PackageManagerUtility.GetPackageInfo
  name: GetPackageInfo
  nameWithType: PackageManagerUtility.GetPackageInfo
  fullName: StansAssets.Foundation.Editor.PackageManagerUtility.GetPackageInfo
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: PackageInfo
  isExternal: true
  name: PackageInfo
  nameWithType: PackageInfo
  fullName: PackageInfo
- uid: StansAssets.Foundation.Editor.PackageManagerUtility.GetAllProjectPackages*
  commentId: Overload:StansAssets.Foundation.Editor.PackageManagerUtility.GetAllProjectPackages
  name: GetAllProjectPackages
  nameWithType: PackageManagerUtility.GetAllProjectPackages
  fullName: StansAssets.Foundation.Editor.PackageManagerUtility.GetAllProjectPackages
- uid: List{PackageInfo}
  commentId: '!:List{PackageInfo}'
  definition: List`1
  name: List<PackageInfo>
  nameWithType: List<PackageInfo>
  fullName: List<PackageInfo>
  nameWithType.vb: List(Of PackageInfo)
  fullName.vb: List(Of PackageInfo)
  name.vb: List(Of PackageInfo)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PackageInfo
    name: PackageInfo
    nameWithType: PackageInfo
    fullName: PackageInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PackageInfo
    name: PackageInfo
    nameWithType: PackageInfo
    fullName: PackageInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: StansAssets.Foundation.Editor.PackageManagerUtility.GetPackageRootPath*
  commentId: Overload:StansAssets.Foundation.Editor.PackageManagerUtility.GetPackageRootPath
  name: GetPackageRootPath
  nameWithType: PackageManagerUtility.GetPackageRootPath
  fullName: StansAssets.Foundation.Editor.PackageManagerUtility.GetPackageRootPath
