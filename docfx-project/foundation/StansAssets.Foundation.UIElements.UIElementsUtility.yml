### YamlMime:ManagedReference
items:
- uid: StansAssets.Foundation.UIElements.UIElementsUtility
  commentId: T:StansAssets.Foundation.UIElements.UIElementsUtility
  id: UIElementsUtility
  parent: StansAssets.Foundation.UIElements
  children:
  - StansAssets.Foundation.UIElements.UIElementsUtility.CreateEvent(Event)
  - StansAssets.Foundation.UIElements.UIElementsUtility.CreateEvent(Event,EventType)
  langs:
  - csharp
  - vb
  name: UIElementsUtility
  nameWithType: UIElementsUtility
  fullName: StansAssets.Foundation.UIElements.UIElementsUtility
  type: Class
  source:
    id: UIElementsUtility
    path: ''
    startLine: 790
  assemblies:
  - cs.temp.dll
  namespace: StansAssets.Foundation.UIElements
  summary: "\nPublic representation of unity UIElementsUtility class.\n"
  example: []
  syntax:
    content: public static class UIElementsUtility
    content.vb: Public Module UIElementsUtility
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: StansAssets.Foundation.UIElements.UIElementsUtility.CreateEvent(Event)
  commentId: M:StansAssets.Foundation.UIElements.UIElementsUtility.CreateEvent(Event)
  id: CreateEvent(Event)
  parent: StansAssets.Foundation.UIElements.UIElementsUtility
  langs:
  - csharp
  - vb
  name: CreateEvent(Event)
  nameWithType: UIElementsUtility.CreateEvent(Event)
  fullName: StansAssets.Foundation.UIElements.UIElementsUtility.CreateEvent(Event)
  type: Method
  source:
    id: CreateEvent
    path: ''
    startLine: 797
  assemblies:
  - cs.temp.dll
  namespace: StansAssets.Foundation.UIElements
  summary: "\nCreate <see cref=\"!:EventBase\"></see> from the correspondent <see cref=\"!:Event\"></see> instance.\n"
  example: []
  syntax:
    content: public static EventBase CreateEvent(Event systemEvent)
    parameters:
    - id: systemEvent
      type: Event
      description: System event instance.
    return:
      type: EventBase
      description: New  <see cref="!:EventBase"></see> instance.
    content.vb: Public Shared Function CreateEvent(systemEvent As  Event) As EventBase
  overload: StansAssets.Foundation.UIElements.UIElementsUtility.CreateEvent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: StansAssets.Foundation.UIElements.UIElementsUtility.CreateEvent(Event,EventType)
  commentId: M:StansAssets.Foundation.UIElements.UIElementsUtility.CreateEvent(Event,EventType)
  id: CreateEvent(Event,EventType)
  parent: StansAssets.Foundation.UIElements.UIElementsUtility
  langs:
  - csharp
  - vb
  name: CreateEvent(Event, EventType)
  nameWithType: UIElementsUtility.CreateEvent(Event, EventType)
  fullName: StansAssets.Foundation.UIElements.UIElementsUtility.CreateEvent(Event, EventType)
  type: Method
  source:
    id: CreateEvent
    path: ''
    startLine: 808
  assemblies:
  - cs.temp.dll
  namespace: StansAssets.Foundation.UIElements
  summary: "\nCreate <see cref=\"!:EventBase\"></see> from the correspondent <see cref=\"!:Event\"></see> instance.\n"
  example: []
  syntax:
    content: public static EventBase CreateEvent(Event systemEvent, EventType eventType)
    parameters:
    - id: systemEvent
      type: Event
      description: System event instance.
    - id: eventType
      type: EventType
      description: System event type.
    return:
      type: EventBase
      description: New  <see cref="!:EventBase"></see> instance.
    content.vb: Public Shared Function CreateEvent(systemEvent As  Event, eventType As EventType) As EventBase
  overload: StansAssets.Foundation.UIElements.UIElementsUtility.CreateEvent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: StansAssets.Foundation.UIElements
  commentId: N:StansAssets.Foundation.UIElements
  name: StansAssets.Foundation.UIElements
  nameWithType: StansAssets.Foundation.UIElements
  fullName: StansAssets.Foundation.UIElements
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: StansAssets.Foundation.UIElements.UIElementsUtility.CreateEvent*
  commentId: Overload:StansAssets.Foundation.UIElements.UIElementsUtility.CreateEvent
  name: CreateEvent
  nameWithType: UIElementsUtility.CreateEvent
  fullName: StansAssets.Foundation.UIElements.UIElementsUtility.CreateEvent
- uid: Event
  isExternal: true
  name: Event
  nameWithType: Event
  fullName: Event
- uid: EventBase
  isExternal: true
  name: EventBase
  nameWithType: EventBase
  fullName: EventBase
- uid: EventType
  commentId: '!:EventType'
  isExternal: true
  name: EventType
  nameWithType: EventType
  fullName: EventType
