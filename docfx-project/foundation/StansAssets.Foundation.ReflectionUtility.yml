### YamlMime:ManagedReference
items:
- uid: StansAssets.Foundation.ReflectionUtility
  commentId: T:StansAssets.Foundation.ReflectionUtility
  id: ReflectionUtility
  parent: StansAssets.Foundation
  children:
  - StansAssets.Foundation.ReflectionUtility.CreateInstance(System.String)
  - StansAssets.Foundation.ReflectionUtility.FindType(System.String)
  langs:
  - csharp
  - vb
  name: ReflectionUtility
  nameWithType: ReflectionUtility
  fullName: StansAssets.Foundation.ReflectionUtility
  type: Class
  source:
    id: ReflectionUtility
    path: ''
    startLine: 594
  assemblies:
  - cs.temp.dll
  namespace: StansAssets.Foundation
  summary: "\nReflection Utility Methods.\n"
  example: []
  syntax:
    content: public static class ReflectionUtility
    content.vb: Public Module ReflectionUtility
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: StansAssets.Foundation.ReflectionUtility.CreateInstance(System.String)
  commentId: M:StansAssets.Foundation.ReflectionUtility.CreateInstance(System.String)
  id: CreateInstance(System.String)
  parent: StansAssets.Foundation.ReflectionUtility
  langs:
  - csharp
  - vb
  name: CreateInstance(String)
  nameWithType: ReflectionUtility.CreateInstance(String)
  fullName: StansAssets.Foundation.ReflectionUtility.CreateInstance(System.String)
  type: Method
  source:
    id: CreateInstance
    path: ''
    startLine: 603
  assemblies:
  - cs.temp.dll
  namespace: StansAssets.Foundation
  summary: "\nMethods will iterate all the project Assemblies.\nIf typeFullName will match new object instance of that type will be created\nand returned as the result.\n"
  example: []
  syntax:
    content: public static object CreateInstance(string typeFullName)
    parameters:
    - id: typeFullName
      type: System.String
      description: Full type name.
    return:
      type: System.Object
      description: New type instance.
    content.vb: Public Shared Function CreateInstance(typeFullName As String) As Object
  overload: StansAssets.Foundation.ReflectionUtility.CreateInstance*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: StansAssets.Foundation.ReflectionUtility.FindType(System.String)
  commentId: M:StansAssets.Foundation.ReflectionUtility.FindType(System.String)
  id: FindType(System.String)
  parent: StansAssets.Foundation.ReflectionUtility
  langs:
  - csharp
  - vb
  name: FindType(String)
  nameWithType: ReflectionUtility.FindType(String)
  fullName: StansAssets.Foundation.ReflectionUtility.FindType(System.String)
  type: Method
  source:
    id: FindType
    path: ''
    startLine: 614
  assemblies:
  - cs.temp.dll
  namespace: StansAssets.Foundation
  summary: "\nMethods will iterate all the project to find a type that matches sissified full type name.\n"
  example: []
  syntax:
    content: public static Type FindType(string typeFullName)
    parameters:
    - id: typeFullName
      type: System.String
      description: Full type name.
    return:
      type: Type
      description: Type object.
    content.vb: Public Shared Function FindType(typeFullName As String) As Type
  overload: StansAssets.Foundation.ReflectionUtility.FindType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: StansAssets.Foundation
  commentId: N:StansAssets.Foundation
  name: StansAssets.Foundation
  nameWithType: StansAssets.Foundation
  fullName: StansAssets.Foundation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: StansAssets.Foundation.ReflectionUtility.CreateInstance*
  commentId: Overload:StansAssets.Foundation.ReflectionUtility.CreateInstance
  name: CreateInstance
  nameWithType: ReflectionUtility.CreateInstance
  fullName: StansAssets.Foundation.ReflectionUtility.CreateInstance
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: StansAssets.Foundation.ReflectionUtility.FindType*
  commentId: Overload:StansAssets.Foundation.ReflectionUtility.FindType
  name: FindType
  nameWithType: ReflectionUtility.FindType
  fullName: StansAssets.Foundation.ReflectionUtility.FindType
- uid: Type
  commentId: '!:Type'
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: Type
